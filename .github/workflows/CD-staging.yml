name: Deploy Staging CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy-staging:
    name: Deploy to staging server
    environment: staging
    runs-on: ubuntu-latest

    steps:
    - name: Execute deployment command
      uses: appleboy/ssh-action@v1.0.3
      env:
        APP_STG_PATH: ${{ vars.APP_STG_PATH }}
        GIT_URL: ${{ secrets.GIT_URL }}
        MINIO_STG_ENDPOINT: ${{ secrets.MINIO_STG_ENDPOINT }}
        MINIO_STG_ACCESS_KEY: ${{ secrets.MINIO_STG_ACCESS_KEY }}
        MINIO_STG_SECRET_KEY: ${{ secrets.MINIO_STG_SECRET_KEY }}
        APP_STG_PORT: ${{ secrets.APP_STG_PORT }}

       with:
        host: ${{ secrets.SSH_HOST_STAGING }}
        username: ${{ secrets.SSH_USER_NAME_STAGING }}
        key: ${{ secrets.SSH_PRIVATE_KEY_STAGING }}
        envs: APP_PATH_STAGING, GIT_URL, MINIO_STG_ENDPOINT, MINIO_STG_ACCESS_KEY, MINIO_STG_SECRET_KEY, APP_STG_PORT
        script: |

            if [[ -d "${APP_PATH_STAGING}" ]]; then 
                cd $APP_PATH_STAGING
                sudo docker compose down
                git pull origin main
            else
                ssh-keyscan github.com > ~/.ssh/known_hosts
                git clone $GIT_URL $APP_PATH_STAGING
                cd $APP_PATH_STAGING
            fi

             # If there are any envars update
            echo "MINIO_STG_ENDPOINT=$MINIO_STG_ENDPOINT" > .env
            echo "MINIO_STG_ACCESS_KEY=$MINIO_STG_ACCESS_KEY" >> .env
            echo "MINIO_STG_SECRET_KEY=$MINIO_STG_SECRET_KEY" >> .env

             # Run app
            sudo docker compose up pacmusic-stg --build --detach
      
    - name: Hit Endpoint
      run: |
        sleep 20
        curl ${{ secrets.STG_URL }}
